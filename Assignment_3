
1. Why are functions advantageous to have in your programs?
Ans:  Following are the advantages of function
•	Code reusability
•	Readability
•	Divides complex programming into simpler ones.

2. When does the code in a function run: when it's specified or when it's called?
Ans: When it’s called.

3. What statement creates a function?
Ans: def 

4. What is the difference between a function and a function call?
Ans: Function is a block of code that perform a specific task/operation while function call is the code used to pass control to a function. 
E.g. def read()    # read() is function
     read()     # function call  

6. What happens to variables in a local scope when the function call returns?
Ans: A local variable becomes undefined after the function call completes.

7. What is the concept of a return value? Is it possible to have a return value in an expression?
Ans: A return is a value that a function returns to the calling script or function when it completes its task.

8. If a function does not have a return statement, what is the return value of a call to that function?
Ans: Undefined


9. How do you make a function variable refer to the global variable?
Ans:  By using global keyword.
10. What is the data type of None?
Ans: NoneType

11. What does the sentence import areallyourpetsnamederic do?
Ans: Imports a module named areallyourpetsnamederic.

12. If you had a bacon() feature in a spam module, what would you call it after importing spam?
Ans: spam.bacon()

13. What can you do to save a programme from crashing if it encounters an error?
Ans: In Python, we use the try and except statements to handle exceptions. 

14. What is the purpose of the try clause? What is the purpose of the except clause?
Ans: The try block lets you test a block of code for errors and The except block lets you handle the error.

